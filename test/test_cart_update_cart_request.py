# coding: utf-8

"""
    Cart Service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Contact: info@gemini-commerce.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from cart.models.cart_update_cart_request import CartUpdateCartRequest

class TestCartUpdateCartRequest(unittest.TestCase):
    """CartUpdateCartRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CartUpdateCartRequest:
        """Test CartUpdateCartRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CartUpdateCartRequest`
        """
        model = CartUpdateCartRequest()
        if include_optional:
            return CartUpdateCartRequest(
                tenant_id = '',
                cart_id = '',
                payload = cart.models.update_cart_request_payload.UpdateCartRequestPayload(
                    cart_status = 'UNKNOWN', 
                    customer_data = cart.models.cart_customer_data.cartCustomerData(
                        customer_grn = '', 
                        firstname = '', 
                        lastname = '', 
                        email = '', 
                        phone_number = '', 
                        groups = [
                            ''
                            ], 
                        tax_code = '', 
                        certified_email = '', 
                        sdi_code = '', 
                        fiscal_code = '', 
                        company_name = '', 
                        agent_grn = '', ), 
                    locale = '', ),
                payload_mask = ''
            )
        else:
            return CartUpdateCartRequest(
        )
        """

    def testCartUpdateCartRequest(self):
        """Test CartUpdateCartRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
