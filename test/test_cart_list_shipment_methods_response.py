# coding: utf-8

"""
    Cart Service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Contact: info@gemini-commerce.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from cart.models.cart_list_shipment_methods_response import CartListShipmentMethodsResponse

class TestCartListShipmentMethodsResponse(unittest.TestCase):
    """CartListShipmentMethodsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CartListShipmentMethodsResponse:
        """Test CartListShipmentMethodsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CartListShipmentMethodsResponse`
        """
        model = CartListShipmentMethodsResponse()
        if include_optional:
            return CartListShipmentMethodsResponse(
                shipments = [
                    cart.models.cart_shipment_data.cartShipmentData(
                        code = '', 
                        method = '', 
                        shipment_grn = '', 
                        payload = '', 
                        cart_item_ids = [
                            ''
                            ], 
                        fee = cart.models.cart_money.cartMoney(
                            units = '', 
                            micros = 56, ), 
                        label = '', 
                        vat_amount = cart.models.cart_money.cartMoney(
                            units = '', 
                            micros = 56, ), 
                        vat_percentage = 1.337, 
                        vat_inaccurate = True, 
                        vat_calculated = True, )
                    ]
            )
        else:
            return CartListShipmentMethodsResponse(
        )
        """

    def testCartListShipmentMethodsResponse(self):
        """Test CartListShipmentMethodsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
