# coding: utf-8

"""
    Cart Service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Contact: info@gemini-commerce.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from cart.models.update_cart_request_payload import UpdateCartRequestPayload

class TestUpdateCartRequestPayload(unittest.TestCase):
    """UpdateCartRequestPayload unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateCartRequestPayload:
        """Test UpdateCartRequestPayload
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateCartRequestPayload`
        """
        model = UpdateCartRequestPayload()
        if include_optional:
            return UpdateCartRequestPayload(
                cart_status = 'UNKNOWN',
                customer_data = cart.models.cart_customer_data.cartCustomerData(
                    customer_grn = '', 
                    firstname = '', 
                    lastname = '', 
                    email = '', 
                    phone_number = '', 
                    groups = [
                        ''
                        ], 
                    tax_code = '', 
                    certified_email = '', 
                    sdi_code = '', 
                    fiscal_code = '', 
                    company_name = '', 
                    agent_grn = '', ),
                locale = ''
            )
        else:
            return UpdateCartRequestPayload(
        )
        """

    def testUpdateCartRequestPayload(self):
        """Test UpdateCartRequestPayload"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
